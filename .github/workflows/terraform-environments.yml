jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.detect.outputs.env }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect environment changes
        id: detect
        run: |
          echo "Changed folders:"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }}

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^environments/dev/'; then
            echo "env=dev" >> $GITHUB_OUTPUT
          elif git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^environments/qa/'; then
            echo "env=qa" >> $GITHUB_OUTPUT
          elif git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^environments/prod/'; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=none" >> $GITHUB_OUTPUT

  terraform:
    needs: detect-changes
    if: needs.detect-changes.outputs.env != 'none'
    runs-on: ubuntu-latest
    name: Terraform Plan & Apply (${{ needs.detect-changes.outputs.env }})

    defaults:
      run:
        working-directory: ./environments/${{ needs.detect-changes.outputs.env }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var-file="${{ needs.detect-changes.outputs.env }}.tfvars"

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan
